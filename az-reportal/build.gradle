/*
 * Copyright 2018 LinkedIn Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

apply plugin: 'distribution'

configurations {
  compileNotJar
  compile.extendsFrom compileNotJar
}

dependencies {
    compileNotJar project(':az-core')
    compile project(':az-crypto')
    compileNotJar project(":azkaban-common")
    compile project(":azkaban-web-server")
    compile project(":azkaban-hadoop-security-plugin")
    compileNotJar(deps.bcprov) { transitive = false }

    compileOnly deps.hadoopCommon
    compileNotJar deps.hadoopCommon
    compileOnly deps.hadoopMRClientCommon
    compileOnly deps.hadoopMRClientCore
    compileOnly (deps.hiveCli) {
        transitive = false
    }
    compileOnly deps.hiveMetastore
    compileOnly(deps.hiveExecCore) {
        exclude group: 'org.pentaho', module: 'pentaho-aggdesigner-algorithm'
        exclude group: 'eigenbase', module: 'eigenbase-properties'
    }
    compileOnly(deps.pig) {
        transitive = false
    }
}


distributions {
    main {
        contents {
            from(jar) {
                into 'lib'
            }
        }
    }
}


//Create a fat jar with runtime dependencies less compileNotJar dependencies

jar {
    zip64 true
    baseName = "az-reportal-fat"
    dependsOn configurations.runtime

    from {
           (configurations.runtime - configurations.compileNotJar)
           .filter { it.path.matches(".*jar") }
           .collect {
            it.isDirectory() ? it : zipTree(it)
           }
    }
    exclude ('**/*.RSA')
    exclude ('**/*.SF')
    exclude ('**/*.DSA')
} 
