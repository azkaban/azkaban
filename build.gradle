buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'com.linkedin:gradle-dustjs-plugin:1.0.0'
        classpath 'de.obqo.gradle:gradle-lesscss-plugin:1.0-1.3.3'
    }
}

plugins {
    id "com.jfrog.artifactory" version "3.1.1"
}

apply from: 'artifactory.gradle'

allprojects {
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
}

/**
 * Gradle wrapper task.
 */
task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

artifactoryPublish {
    doFirst {
        println "Overriding repository based on project version (snapshot/release) version=${project.version}"
        clientConfig.publisher.repoKey = "libs-${project.version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release'}-local"
        println("Publishing to ${clientConfig.publisher.repoKey}")
    }
}

subprojects {
    apply from: '../tests.gradle'

    jar.baseName = "$project.name"

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId "$jar.baseName"
                from components.java
                artifact sourcesJar { classifier "sources" }
            }
            all {
                pom.withXml {
                    asNode().dependencies.'*'.findAll() {
                        it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                            dep.name == it.artifactId.text()
                        }
                    }.each { it.scope*.value = 'compile' }
                }
            }
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    sourcesJar.baseName = jar.baseName

    artifacts {
        archives sourcesJar
    }

    artifactoryPublish.dependsOn(jar, sourcesJar)

}

// Skip publishing the root project
artifactoryPublish.skip = true
