/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubernetes.autoscaling.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Current information about the autoscaler.
 */
@ApiModel(description = "Current information about the autoscaler.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-02T17:31:04.907Z[Etc/UTC]")
public class V1beta2VerticalPodAutoscalerStatus {
  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<V1beta2VerticalPodAutoscalerStatusConditions> conditions = null;

  public static final String SERIALIZED_NAME_RECOMMENDATION = "recommendation";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION)
  private V1beta2VerticalPodAutoscalerStatusRecommendation recommendation;


  public V1beta2VerticalPodAutoscalerStatus conditions(List<V1beta2VerticalPodAutoscalerStatusConditions> conditions) {

    this.conditions = conditions;
    return this;
  }

  public V1beta2VerticalPodAutoscalerStatus addConditionsItem(V1beta2VerticalPodAutoscalerStatusConditions conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.
   * @return conditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.")

  public List<V1beta2VerticalPodAutoscalerStatusConditions> getConditions() {
    return conditions;
  }


  public void setConditions(List<V1beta2VerticalPodAutoscalerStatusConditions> conditions) {
    this.conditions = conditions;
  }


  public V1beta2VerticalPodAutoscalerStatus recommendation(V1beta2VerticalPodAutoscalerStatusRecommendation recommendation) {

    this.recommendation = recommendation;
    return this;
  }

   /**
   * Get recommendation
   * @return recommendation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2VerticalPodAutoscalerStatusRecommendation getRecommendation() {
    return recommendation;
  }


  public void setRecommendation(V1beta2VerticalPodAutoscalerStatusRecommendation recommendation) {
    this.recommendation = recommendation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1beta2VerticalPodAutoscalerStatus v1beta2VerticalPodAutoscalerStatus = (V1beta2VerticalPodAutoscalerStatus) o;
    return Objects.equals(this.conditions, v1beta2VerticalPodAutoscalerStatus.conditions) &&
        Objects.equals(this.recommendation, v1beta2VerticalPodAutoscalerStatus.recommendation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conditions, recommendation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1beta2VerticalPodAutoscalerStatus {\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    recommendation: ").append(toIndentedString(recommendation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

